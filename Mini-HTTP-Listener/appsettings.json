{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "None"
    }
  },


  "Mini_HTTP_Listener_Configuration": {
    "ip_address": [ "127.0.0.1", "localhost" ],
    "port_number": "10000",
    "secure": "false",

    "title": "Mini-HTTP-Listener by Fabrizio Amorelli",

    "authentication_schemes": "",
    "username": "",
    "password": "",

    "start_browser": "true",
    "start_host": "127.0.0.1",

    "enable_static": "true",
    "static_folder": "html",

    "enable_php": "true",
    "php_cgi": "C:\\xampp\\php\\php-cgi.exe",
    "php": "C:\\xampp\\php\\php.exe"
  },


  "NLog": {
    "autoReload": true,
    "throwConfigExceptions": true,
    "targets": {
      "async": true,

      "logfile": {
        "type": "File",
        "header": "Mini-HTTP-Listener - Log File [created at ${date:yyyy-MM-dd HH\\:mm\\:ss}]",
        "footer": "Mini-HTTP-Listener - EOF File [last access ${date:yyyy-MM-dd HH\\:mm\\:ss}]",
        "layout": "${date:yyyy-MM-dd HH\\:mm\\:ss} - ${level} - ${replace:searchFor=Mini_HTTP_Listener.service.|Mini_HTTP_Listener.response.:replaceWith=:regex=true:inner=${logger}} - ${message}",
        "fileName": "log/${date:yyyyMMdd}_Mini_HTTP_Listener.log",
        "enableFileDelete": "true",
        "createDirs": "true",
        "replaceFileContentsOnEachWrite": "false",
        "deleteOldFileOnStartup": "false",
        "archiveFileName": "log/archive/{#######}_Mini_HTTP_Listener.log",
        "archiveEvery": "Day",
        "archiveNumbering ": "Date",
        "archiveOldFileOnStartup": "false",
        "enableArchiveFileCompression": "false",
        "maxArchiveFiles": "5"

      },
      "logconsole": {
        "type": "ColoredConsole",
        "layout": "${date:yyyy-MM-dd HH\\:mm\\:ss} - ${level} - ${message}",
        "wordHighlightingRules": [
          {
            "text": "Info",
            "condition": "level == LogLevel.Info",
            "foregroundColor": "Black",
            "backgroundColor": "White"
          },
          {
            "text": "Fatal",
            "condition": "level == LogLevel.Fatal",
            "foregroundColor": "White",
            "backgroundColor": "Red"
          },
          {
            "text": "Error",
            "condition": "level == LogLevel.Error",
            "foregroundColor": "Black",
            "backgroundColor": "DarkYellow"
          }

        ],
        "rowHighlightingRules": [
          {
            "condition": "level == LogLevel.Fatal",
            "foregroundColor": "White"
          },
          {
            "condition": "level == LogLevel.Error",
            "foregroundColor": "White"
          }
        ]
      },
      "httpconsole": {
        "type": "ColoredConsole",
        "layout": "${date:yyyy-MM-dd HH\\:mm\\:ss} - ${message}",
        "wordHighlightingRules": [
          {
            "text": "GET",
            "condition": "level == LogLevel.Information",
            "foregroundColor": "Black",
            "backgroundColor": "Magenta"
          },
          {
            "text": "POST",
            "condition": "level == LogLevel.Information",
            "foregroundColor": "Black",
            "backgroundColor": "Magenta"
          },
          {
            "text": "PUT",
            "condition": "level == LogLevel.Information",
            "foregroundColor": "Black",
            "backgroundColor": "Magenta"
          },
          {
            "text": "DELETE",
            "condition": "level == LogLevel.Information",
            "foregroundColor": "Black",
            "backgroundColor": "Magenta"
          },
          {
            "text": "OPTIONS",
            "condition": "level == LogLevel.Information",
            "foregroundColor": "Black",
            "backgroundColor": "Magenta"
          },
          {
            "text": "Error",
            "condition": "level == LogLevel.Error",
            "foregroundColor": "Black",
            "backgroundColor": "DarkYellow"
          }

        ],
        "rowHighlightingRules": [
          {
            "condition": "level == LogLevel.Fatal",
            "foregroundColor": "White"
          },
          {
            "condition": "level == LogLevel.Error",
            "foregroundColor": "White"
          }
        ]
      }
    },
    "rules": [
      {
        "logger": "Microsoft.*",
        "minLevel": "Debug",
        "writeTo": "",
        "final": true
      },
      {
        "logger": "Mini_HTTP_Listener.service*",
        "minLevel": "Info",
        "writeTo": "logconsole"
      },
      {
        "logger": "Mini_HTTP_Listener.response*",
        "minLevel": "Info",
        "writeTo": "httpconsole"
      },
      {
        "logger": "*",
        "minLevel": "Debug",
        "writeTo": "logfile"
      }

    ]
  }

}